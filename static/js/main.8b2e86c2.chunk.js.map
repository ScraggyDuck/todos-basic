{"version":3,"sources":["img/check.svg","img/check-complete.svg","img/delete-item.svg","img/tick.svg","components/TodoItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoItem","_this$props","this","props","item","onItemClick","onDeleteItemClick","url","checkImg","isComplete","checkCompleteImg","react_default","a","createElement","className","classNames","TodoItem-complete","onClick","src","width","height","title","deleteItem","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newItem","todoItems","getTodoItems","onKeyUp","bind","assertThisInitialized","onChange","_this2","event","index","indexOf","setState","concat","toConsumableArray","slice","objectSpread","localStorage","getItem","JSON","parse","_this3","todoItemsUpdate","setItem","stringify","keyCode","text","target","value","trim","_this4","_this$state","tick","type","placeholder","length","map","src_components_TodoItem","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b2e86c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check.40eb9cc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-complete.d29f1779.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-item.b55208ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.38966f6d.svg\";","import React, {Component} from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport checkImg from '../img/check.svg';\r\nimport checkCompleteImg from '../img/check-complete.svg';\r\nimport deleteItem from '../img/delete-item.svg';\r\nimport './TodoItem.css'\r\n\r\nclass TodoItem extends Component {\r\n    render(){\r\n        const { item, onItemClick, onDeleteItemClick} = this.props;\r\n        let url = checkImg;\r\n        if(item.isComplete){\r\n            url = checkCompleteImg;\r\n        }\r\n        return (\r\n            <div className={classNames('TodoItem', {\r\n                'TodoItem-complete': item.isComplete\r\n            })}>\r\n                <img onClick={onItemClick} src={url} width={32} height={32} />\r\n                <p>{item.title}</p>\r\n                <img className=\"deleteItem\" onClick={onDeleteItemClick} src={deleteItem} width={15} height={15}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React,  {Component} from 'react';\r\nimport './App.css';\r\nimport TodoItem from './components/TodoItem';\r\nimport tick from './img/tick.svg';\r\n\r\nconst storageKey = 'todoList';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      newItem: '',\r\n      todoItems: this.getTodoItems()\r\n    };\r\n\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onItemClick(item) {\r\n    return (event) => {\r\n      const isComplete = item.isComplete;\r\n      const {todoItems} = this.state;\r\n      const index = todoItems.indexOf(item);\r\n      this.setState({\r\n        todoItems: [\r\n          ...todoItems.slice(0, index),\r\n          {...item, isComplete: !isComplete},\r\n          ...todoItems.slice(index + 1)\r\n        ]\r\n      });\r\n    };\r\n  }\r\n\r\n  getTodoItems(){\r\n    let todoItems = [];\r\n    if(localStorage.getItem(storageKey))\r\n      todoItems = JSON.parse(localStorage.getItem(storageKey));\r\n    return todoItems;\r\n  }\r\n\r\n  onDeleteItemClick(item) {\r\n    return (event) => {\r\n      const {todoItems} = this.state;\r\n      const index = todoItems.indexOf(item);\r\n      const todoItemsUpdate = [\r\n        ...todoItems.slice(0, index),\r\n        ...todoItems.slice(index + 1)\r\n      ];\r\n\r\n      localStorage.setItem(storageKey, JSON.stringify(todoItemsUpdate));\r\n\r\n      this.setState({\r\n        todoItems: todoItemsUpdate\r\n      });\r\n    };\r\n  }\r\n\r\n  onKeyUp(event){\r\n    if(event.keyCode === 13){\r\n      let text = event.target.value;\r\n\r\n      if(!text)\r\n        return;\r\n\r\n      text = text.trim();\r\n      if(!text)\r\n        return;\r\n\r\n      let {todoItems} = this.state;\r\n      let todoItemsUpdate = [{ title: text, isComplete: false }, ...todoItems,];\r\n      localStorage.setItem(storageKey, JSON.stringify(todoItemsUpdate));\r\n\r\n      this.setState({\r\n        newItem: '',\r\n        todoItems: todoItemsUpdate\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(event){\r\n    this.setState({\r\n      newItem: event.target.value\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {newItem, todoItems} = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <p>todos</p>\r\n        <div className=\"App\">\r\n          <div className=\"header\">\r\n            <img src={tick} width={15} height={15}/>\r\n            <input\r\n              type=\"text\" \r\n              value={newItem} \r\n              onChange={this.onChange}\r\n              onKeyUp={this.onKeyUp} \r\n              placeholder=\"What needs to be done?\" \r\n            />\r\n          </div>\r\n          {\r\n            todoItems.length > 0 && todoItems.map((item, index) => \r\n              <TodoItem item={item} key={index} \r\n                onItemClick={this.onItemClick(item)} \r\n                onDeleteItemClick={this.onDeleteItemClick(item)}\r\n              />)\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}